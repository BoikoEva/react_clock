{"version":3,"sources":["components/Clock.js","App.js","index.js"],"names":["Clock","state","date","Date","toLocaleTimeString","this","intervalId","setInterval","setState","prevProps","console","log","name","props","React","Component","App","isClockVisible","clockName","showClock","hideClock","randomClockName","Math","round","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAIaA,G,MAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,WAAaC,aAAY,WAC5B,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,yBAChC,OARP,gCAWE,SAAmBK,GAEjBC,QAAQC,IACNF,EAAUG,OAASP,KAAKQ,MAAMD,KAC1BP,KAAKJ,MAAMC,KADf,qCAEkCO,EAAUG,KAF5C,eAEuDP,KAAKQ,MAAMD,SAhBxE,oBAoBE,WACE,OACE,8BACGP,KAAKJ,MAAMC,UAvBpB,GAA2BY,IAAMC,YCqDlBC,E,4MAlDbf,MAAQ,CACNgB,gBAAgB,EAChBC,UAAW,uB,EAGbC,UAAY,WACV,EAAKX,UAAS,iBAAO,CACnBS,gBAAgB,O,EAIpBG,UAAY,WACV,EAAKZ,UAAS,iBAAO,CACnBS,gBAAgB,O,EAIpBI,gBAAkB,WAChB,EAAKb,UAAS,iBAAO,CACnBU,UAAU,qBAAD,OAAkBI,KAAKC,MAAsB,IAAhBD,KAAKE,gB,4CAI/C,WACE,MAAsCnB,KAAKJ,MAAnCgB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,yBAAKO,UAAU,SACb,2CACA,2CAEG,IACAR,GAAkB,kBAAC,EAAD,CAAOL,KAAMM,KAElC,yBAAKO,UAAU,kBACb,4BAAQC,KAAK,SAASC,QAAStB,KAAKc,WAApC,cAGA,4BAAQO,KAAK,SAASC,QAAStB,KAAKe,WAApC,cAGA,4BAAQM,KAAK,SAASC,QAAStB,KAAKgB,iBAApC,yB,GA1CQP,IAAMC,WCFxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.da51fda2.chunk.js","sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.intervalId = setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    // eslint-disable-next-line\n    console.log(\n      prevProps.name === this.props.name\n        ? this.state.date\n        : `The Clock was renamed from ${prevProps.name} to ${this.props.name}`,\n    );\n  }\n\n  render() {\n    return (\n      <span>\n        {this.state.date}\n      </span>\n    );\n  }\n}\n\nClock.propTypes = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n}).isRequired;\n","import React from 'react';\n\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 'Clock Name № 0',\n  }\n\n  showClock = () => {\n    this.setState(() => ({\n      isClockVisible: true,\n    }));\n  };\n\n  hideClock = () => {\n    this.setState(() => ({\n      isClockVisible: false,\n    }));\n  };\n\n  randomClockName = () => {\n    this.setState(() => ({\n      clockName: `Clock Name № ${Math.round(Math.random() * 100)}`,\n    }));\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {isClockVisible && <Clock name={clockName} />}\n        </p>\n        <div className=\"Clock__buttons\">\n          <button type=\"button\" onClick={this.showClock}>\n            Show Clock\n          </button>\n          <button type=\"button\" onClick={this.hideClock}>\n            Hide Clock\n          </button>\n          <button type=\"button\" onClick={this.randomClockName}>\n            Set Random Name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}